services:
  postgres:
    container_name: qtd-postgres
    image: postgres:17.1
    volumes:
      - qtd_postgres:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      POSTGRES_INIT_DB: ${POSTGRES_INIT_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - qtd_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    container_name: qtd-keycloak
    command: start  --import-realm
    environment:
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_PORT: ${KC_HOSTNAME_PORT}
      KC_HTTP_RELATIVE_PATH: ${KC_HTTP_RELATIVE_PATH}
      KC_HOSTNAME_PATH: ${KC_HOSTNAME_PATH}
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      QUARKUS_TRANSACTION_MANAGER_ENABLE_RECOVERY: true
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/tsoftware-realm.json
      KC_HTTPS_KEY_STORE_FILE: /etc/keycloak/server.p12
      KC_HTTPS_KEY_STORE_PASSWORD: ${STORE_PASSWORD}
    restart: always
    volumes:
      - ./tsoftware-realm.json:/opt/keycloak/data/import/tsoftware-realm.json
      - ./server.p12:/etc/keycloak/server.p12
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - qtd_network
  server:
    image: ${SERVER_IMAGE}
    container_name: qtd-server
    environment:
      KEY_ALIAS: ${KEY_ALIAS}
      APP_PORT: ${APP_PORT}
      DB_URL: ${DB_URL}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      OAUTH2_RESOURCESERVER_URI: ${OAUTH2_RESOURCESERVER_URI}
      IDP_URL: ${IDP_URL}
      IDP_EXTERNAL_URL: ${IDP_EXTERNAL_URL}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      IDP_REALM: ${IDP_REALM}
      STORE_PASSWORD: ${STORE_PASSWORD}
    networks:
      - qtd_network
    restart: always
    depends_on:
      - keycloak

  nginx:
    container_name: qtd-nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./tsoftware.store.crt:/etc/ssl/certs/tsoftware.store.crt
      - ./tsoftware.store.key:/etc/ssl/private/tsoftware.store.key
    depends_on:
      - server
    restart: always
    networks:
      - qtd_network
volumes:
  qtd_postgres:
    driver: local
    name: qtd_postgres

networks:
  qtd_network:
    name: qtd_network
    driver: bridge
